LatexInComments (shortened *laic*) is an Emacs package that renders
$\LaTeX$ math blocks in code comments. It identifies math blocks
automatically and calls LaTeX under the hood to render them as images
and display them as overlays.

#+html: <p align="center"> <img src="laic_cpp_example.gif" width="75%" alt="Animated GIF image shows a short C++ function with a comment block that contains LaTeX-formatted math, alternating between their text and graphical representations."/> </p>

#+html: <p align="center"> A somewhat excessive example of LaTeX in C++ comments </p>

* Usage

The package offers a few interactive functions to show and hide
math blocks in comments:
- *laic-create-overlay-from-comment-inside-or-forward*: Create overlay
  for current or next visible latex block in a comment, relative to
  cursor position.
- *laic-create-overlays-from-comment-inside-or-forward*: Create
  overlays for all latex blocks in the current or next comment,
  relative to cursor position.
- *laic-remove-overlays*: Remove all laic overlays from the current
  buffer, but keep cached images on disk.
- *laic-remove-overlays-and-files*: Remove all laic overlays from the
  current buffer and delete cached images from disk.

Images are generated on the first show operation, and cached for fast
show/hide afterwards. Cached files are deleted when
*laic-remove-overlays-and-files* is explicitly called, when the buffer
is killed or Emacs is closed.

* Requirements

Should work out of the box in any Emacs programming mode that can
identify comments with the builtin elisp function *comment-beginning*,
and has been tested in C++, GLSL, Lua and elisp.

The only external requirements are:
- A [[https://www.latex-project.org/][LaTeX]] distribution that provides the *latex* command. Tested with
  [[https://en.wikipedia.org/wiki/TeX_Live][TeX Live]] on Ubuntu and Windows10, but should work with [[https://miktex.org/][MiKTeX]] and
  [[https://www.tug.org/mactex/][MacTeX]] too.
- The *dvipng* commandline utility. May need to be installed
  independently and customized (see *Customization*)

* Installation

At the moment *laic* can only be installed through direct
download. Just copy [[file:laic.el]] to your local lisp folder, for
example:

#+BEGIN_SRC elisp
  (add-to-list 'load-path "~/.emacs.d/lisp/")
#+END_SRC

and require it somewhere in your init.el. The most convenient way is
to add a programming mode hook that loads *laic* and sets up
keybindings for the desired interactive functions. Ex:
#+BEGIN_SRC elisp
  (add-hook 'prog-mode-hook
   (function
    (lambda ()
     (require 'laic)
     ;; Create overlay for current or next visible latex block in a comment.
     (local-set-key (kbd "C-c C-x C-l") laic-create-overlay-from-comment-inside-or-forward)
     ;; Create overlays for all latex blocks in the current comment.
     (local-set-key (kbd "C-c C-x C-o") 'laic-create-overlays-from-comment-inside-or-forward)
     ;; Remove all laic overlays
     (local-set-key (kbd "C-c C-x o") 'laic-remove-overlays)
     ;; Remove all laic overlays and delete cache
     (local-set-key (kbd "C-c C-x r") 'laic-remove-overlays-and-files)
#+END_SRC

* Customization

A few options can be customized with (customize-group 'laic)
- *laic-block-delimiter-pairs*: list of balanced begin/end delimiter pairs.
- *laic-command-dvipng*: defaults to "dvipng".
- *laic-extra-packages*: additional packages can be added here (amsmath and amsfonts are included by default).
- *laic-output-dir*: temporary files are stored in this folder, relative to current file path.

* Motivation

When writing math-heavy code it's often necessary to cite, show and
explain complex formulas. The most common options seem to be:
- Explaining math in plain text, often verbosely.
- Using ad-hoc textual math that often ends up looking almost like
  code, just formatted differently.
- Citing or linking formulas in source papers/books/websites without
  showing them explicitly, which requires extra steps and viewers.

I've used these options in the past, and they're viable but far from
optimal. Emacs org-mode offers a very convenient way to quickly
preview LaTeX fragments directly in the editor ([[https://orgmode.org/manual/Previewing-LaTeX-fragments.html][org-latex-preview]]),
and I realized something similar in comments could be useful.

Augmenting code comments to increase their expressiveness beyond
what's possible in plain text is a powerful idea, in my humble
opinion. LaTeX math can be considered a domain-specific language that
is reasonably easy to write and read. If you already typeset math in
LaTeX elsewhere (ex: in a paper, in documentation, in org-mode,
etc...) you can easily copy relevant formulas directly to code
comments.

I use LaTeX in comments quite often for standalone formulas, and
sometimes for longer derivations that are relevant enough to show
beside code. I try to keep formulas as simple as possible and readable
in plain text, so that they remain useful even when *laic* is not
available.

Overall I'm happy with the result, but I find it important to resist
the temptation of overusing it. Writing multi-page formulas, relying
on very complex notation, defining custom macros, etc, is often
counter-productive, can make comments too verbose, harder to read in
plain text, and harder to ignore when focusing on code. It can also
make your Emacs-less colleagues hate you when reading your code, which
is never good.

** Design

The main inspiration for both functionality and code structure was
org-latex-preview, that offers more features and customization, but
has a few drawbacks I wanted to avoid: only works in org-mode
buffers by default, requires additional packages and configuration,
and is somewhat slow on the first invocation.

For *laic* I prioritized simplicity and speed over features:
- minimal dependencies, just latex + dvipng.
- easy setup, should work out of the box without customization.
- optimized for displaying formulas for the first time while reading
  code/comments sequentially.
- instantaneous hide/show of cached images after first invocation.

(N.B. org-latex-preview is under active development and has already
overcome some of the drawbacks it had when I started working on
*laic*)

** Alternatives

Within Emacs:
- [[https://github.com/TobiasZawada/texfrag][texfrag]] is the only direct alternative available at the time of
  writing that I know of. It's more general and ambitious than *laic*,
  but also slower and harder to install, from my experience.
- org-latex-preview is being optimized for speed and extended to work
  anywhere, including prog-mode comments, and looks extremely promising
  https://www.youtube.com/watch?v=u44X_th6_oY&t=15s

Outside Emacs:
- [[https://www.doxygen.nl/manual/formulas.html][Doxygen]] is a well-known documentation generator from annotated code
  comments, and supports LaTex math wrapped in its custom "formula"
  tags, but only supports a handful of languages, imposes additional
  requirements on comment formatting, and involves a slow HTML
  generation step.
- There are several VS Code extensions that solve a similar problem
  ([[https://marketplace.visualstudio.com/items?itemName=Remisa.mathover][mathover]], [[https://marketplace.visualstudio.com/items?itemName=vs-publisher-1305558.VsTeXCommentsExtension][TeX Comments]], [[https://marketplace.visualstudio.com/items?itemName=howcasperwhat.comment-formula][Comment Formula]]) but I can't pretend I care
  :)

* Gallery
Some reasonable and unreasonable uses of laic

- Simplest example
- additional xcolor
- additional command
