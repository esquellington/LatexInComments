LatexInComments (shortened *laic*) is an Emacs package that renders
$\LaTeX$ math blocks in code comments. It identifies math blocks
automatically and calls LaTeX under the hood to render them as images
and display them as overlays.

It has been tested in C++, GLSL, Lua and elisp, but should work out of
the box in any programming mode that can identify comment blocks with
the builtin elisp function *comment-beginning*.

#+html: <p align="center"> <img src="laic_cpp_example.gif" width="75%" title"LaTeX in C++ comments"/> </p>

* Requirements

The only requirement is a [[https://www.latex-project.org/][LaTeX]] distribution tha provides the *latex*
command, and the *dvipng* commandline utility:
- Tested with [[https://en.wikipedia.org/wiki/TeX_Live][TeX Live]] on Ubuntu and Windows10.
- Should work with [[https://miktex.org/][MiKTeX]] and [[https://www.tug.org/mactex/][MacTeX]]
- *dvipng* may need to be installed independently and customized (see *Customization*)

* Installation

At the moment *laic* can only be installed through direct
download. Just copy [[file:laic.el]] to your local lisp folder and require
it in your startup file.

The following elisp code adds a hook to all programming modes that
loads *laic* and sets up keybindings for the most relevant interactive
functions.
#+BEGIN_SRC elisp
  (add-hook 'prog-mode-hook
   (function
    (lambda ()
     (require 'laic)
     ;; render current or next LaTeX block (same keybinding as org-latex-preview)
     (local-set-key (kbd "C-c C-x C-l") 'laic-create-overlay-from-latex-inside-or-forward)
     ;; render all blocks in current comment
     (local-set-key (kbd "C-c c") 'laic-create-overlays-from-comment-inside)
     ;; disable all laic overlays
     (local-set-key (kbd "C-c r") 'laic-remove-overlays))))
#+END_SRC

* Usage

Interactive functions:
- *laic-create-overlay-from-latex-inside-or-forward* renders current or next LaTeX block as an overlay
- *laic-create-overlays-from-comment-inside* renders all blocks in current comment
- *laic-remove-overlays* removes/hides all overlays

* Customization

- *laic-block-delimiter-pairs*
- *laic-command-dvipng*: defaults to "dvipng".
- *laic-extra-packages*: additional packages can be added here (amsmath and amsfonts are included by default).
- *laic-output-dir*: temporary files are stored in this folder, relative to current file path.

* TODO Motivation
- /Why bother adding LaTeX-formatted math in code comments?/

  When writing math-heavy code it is often necessary to cite, show and
  explain complex formulas. The most popular options seem to be:
  - Explaining math in plain text, often very verbosely.
  - Using ad-hoc textual math, often ends up looking almost like
    code, just formatted differently.
  - Citing formulas in source papers/books, maybe as hyperlinks,
    without showing them explicitly, which requires an extra step to
    understand the code.

  Comments are not code, so in my opinion there's no reason to limit
  their expressiveness to plain text. LaTeX is reasonably easy to
  write and read directly in comments, and can be automatically parsed
  to display math as images beside code itself. It can result in
  increased comment verbosity, but LaTeX blocks are very easily
  identified.

- *laic* prioritizes simplicity and speed over features:
  - minimal dependencies: just latex + dvipng
  - easy setup: should work out of the box without customization
  - optimized for the most frequent use-case: toggling formulas on/off
    once while reading code/comments

- The main inspiration is org-latex-preview, that only works in
  org-mode buffers by default, requires additional latex packages, and
  is slower on the 1st invokation.

** Alternatives
*TODO* not sure this is all accurate, review, don't say anything that
 cannot be proved
- [[https://github.com/TobiasZawada/texfrag][texfrag]] is the only direct alternative I know of, more general and
  ambitious than *laic*, but also slower and harder to install.
- [[https://www.doxygen.nl/manual/formulas.html][Doxygen]] includes its own math notation that only covers a subset of
  what LaTeX math environments can do.
